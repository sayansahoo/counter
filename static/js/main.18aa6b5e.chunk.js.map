{"version":3,"sources":["containers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","MAX","MIN","useState","counter","setCounter","styles","counterBox","display","justifyContent","margin","boxSizing","fontSize","div1","height","width","border","alignItems","background","borderRight","color","cursor","fontWeight","borderTopLeftRadius","borderBottomLeftRadius","div2","input","outline","textAlign","div3","borderTopRightRadius","borderBottomRightRadius","useStyles","style","onClick","type","value","onChange","e","target","isNaN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAsGeA,EAzCC,SAAC,GAA6B,IAAD,IAA1BC,WAA0B,MAApB,IAAoB,MAAdC,WAAc,MAAR,EAAQ,EAC3C,EAA8BC,mBAASD,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEMC,EA9DU,SAAC,GAAD,IAAGF,EAAH,EAAGA,QAAH,MAAkB,CAClCG,WAAY,CACVC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,aACRC,UAAW,aACXC,SAAU,IAEZC,KAAM,CACJC,OAAQ,GACRC,MAAO,GACPC,OAAQ,oBACRR,QAAS,OACTS,WAAY,SACZR,eAAgB,SAChBS,WAAY,UACZC,YAAa,OACbC,MAAO,UACPC,OAAQ,UACRC,WAAY,OACZC,oBAAqB,MACrBC,uBAAwB,OAE1BC,KAAM,CACJX,OAAQ,GACRC,MAAO,GACPC,OAAQ,oBACRR,QAAS,OACTS,WAAY,SACZR,eAAgB,SAChBS,WAAY,WAEdQ,MAAO,CACLX,MAAO,MACPD,OAAQ,MACRa,QAAS,OACTX,OAAQ,OACRE,WAAY,UACZU,UAAW,SACXR,MAAO,UACPE,WAAY,OACZV,SAAUR,EAAU,IAAM,GAAKA,EAAU,GAAK,GAAK,IAErDyB,KAAM,CACJf,OAAQ,GACRC,MAAO,GACPC,OAAQ,oBACRR,QAAS,OACTS,WAAY,SACZR,eAAgB,SAChBS,WAAY,UACZE,MAAO,UACPC,OAAQ,UACRC,WAAY,OACZQ,qBAAsB,MACtBC,wBAAyB,QAOZC,CAAU,CAAE5B,YAkB3B,OACE,sBAAK6B,MAAO3B,EAAOC,WAAnB,UACE,qBAAK2B,QAPW,YACb9B,GAAWF,GAChBG,GAAYD,EAAU,IAKO6B,MAAO3B,EAAOO,KAAzC,eAGA,qBAAKoB,MAAO3B,EAAOmB,KAAnB,SACE,uBACEU,KAAK,OACLF,MAAO3B,EAAOoB,MACdU,MAAOhC,EACPiC,SA1Bc,SAACC,GACrB,IAAMF,EAAQE,EAAEC,OAAOH,MACnBI,OAAOJ,KAAYI,OAAOJ,KAAWA,EAAQnC,GACjDI,EAAW+B,QA0BT,qBAAKF,QAvBK,YACP9B,GAAWH,GAChBI,GAAYD,EAAU,IAqBC6B,MAAO3B,EAAOuB,KAAnC,mBC1FSY,EAFH,kBAAM,cAAC,EAAD,CAASvC,IAAK,KCSjBwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.18aa6b5e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useStyles = ({ counter }) => ({\r\n  counterBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"150px auto\",\r\n    boxSizing: \"border-box\",\r\n    fontSize: 29,\r\n  },\r\n  div1: {\r\n    height: 56,\r\n    width: 60,\r\n    border: \"1px solid #B24242\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    background: \"#FFFFFF\",\r\n    borderRight: \"none\",\r\n    color: \"#B24242\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n    borderTopLeftRadius: \"8px\",\r\n    borderBottomLeftRadius: \"8px\",\r\n  },\r\n  div2: {\r\n    height: 56,\r\n    width: 60,\r\n    border: \"1px solid #B24242\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    background: \"#FBE8E8\",\r\n  },\r\n  input: {\r\n    width: \"95%\",\r\n    height: \"80%\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    background: \"#FBE8E8\",\r\n    textAlign: \"center\",\r\n    color: \"#B24242\",\r\n    fontWeight: \"bold\",\r\n    fontSize: counter > 999 ? 22 : counter > 99 ? 25 : 29,\r\n  },\r\n  div3: {\r\n    height: 56,\r\n    width: 60,\r\n    border: \"1px solid #B24242\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    background: \"#B24242\",\r\n    color: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n    borderTopRightRadius: \"8px\",\r\n    borderBottomRightRadius: \"8px\",\r\n  },\r\n});\r\n\r\nconst Counter = ({ MAX = 1000, MIN = 1 }) => {\r\n  const [counter, setCounter] = useState(MIN);\r\n\r\n  const styles = useStyles({ counter });\r\n\r\n  const onValueChange = (e) => {\r\n    const value = e.target.value;\r\n    if (isNaN(+value) || (!isNaN(+value) && +value > MAX)) return;\r\n    setCounter(value);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    if (+counter >= MAX) return;\r\n    setCounter(+counter + 1);\r\n  };\r\n\r\n  const onSubstract = () => {\r\n    if (+counter <= MIN) return;\r\n    setCounter(+counter - 1);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.counterBox}>\r\n      <div onClick={onSubstract} style={styles.div1}>\r\n        -\r\n      </div>\r\n      <div style={styles.div2}>\r\n        <input\r\n          type=\"text\"\r\n          style={styles.input}\r\n          value={counter}\r\n          onChange={onValueChange}\r\n        />\r\n      </div>\r\n      <div onClick={onAdd} style={styles.div3}>\r\n        +\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\nimport Counter from \"./containers\";\n\nconst App = () => <Counter MIN={5} />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}